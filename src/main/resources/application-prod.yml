# src/main/resources/application-prod.yml
# Configuración para PRODUCCIÓN

# Seguridad adicional
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: never
    include-binding-errors: never

spring:
  application:
    name: inventory-service

  config:
    activate:
      on-profile: prod

  # Base de datos - producción
  # Base de datos - desarrollo
  datasource:
    url: jdbc:postgresql://${DB_HOST_PROD}:${DB_PORT_PROD}/${DB_NAME_PROD:postgres}
    username: ${DB_USERNAME_PROD:postgres}
    password: ${DB_PASSWORD_PROD:password}
    driver-class-name: org.postgresql.Driver

    # Configuración de HikariCP (Pool de conexiones)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 10
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: InventoryHikariPool

  # JPA/Hibernate para producción
  jpa:
    hibernate:
      ddl-auto: validate  # validate, update, create, create-drop, none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        order_inserts: true
        order_updates: true
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 25
        # Cache de segundo nivel (si usas Redis)
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    open-in-view: false  # Mejor práctica para evitar lazy loading issues
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
    validate-on-migrate: true
    clean-disabled: true  # Permitir limpiar BD en desarrollo


  # Configuración de Redis (Cache)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}  # Vacío si no tiene password
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hora en millisegundos
      cache-null-values: false
      use-key-prefix: true
      key-prefix: inventory_prod_

  # DevTools desactivado
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false

# Logging mínimo para producción
logging:
  level:
    root: WARN
    com.altico.cakeserver: INFO
    org.springframework: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/cake-server/app.log

# Actuator - solo health y metrics
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

# Mensaje personalizado
app:
  environment: "PRODUCTION"
  debug: false