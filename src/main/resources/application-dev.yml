# src/main/resources/application-dev.yml
# Configuración para DESARROLLO

# Configuración del servidor
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: inventory-service

  config:
    activate:
      on-profile: dev

  # Base de datos - desarrollo
  datasource:
    url: jdbc:postgresql://${DB_HOST_DEV}:${DB_PORT_DEV}/${DB_NAME_DEV:postgres}
    username: ${DB_USERNAME_DEV:postgres}
    password: ${DB_PASSWORD_DEV:password}
    driver-class-name: org.postgresql.Driver

    # Configuración de HikariCP (Pool de conexiones)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: InventoryHikariPool

  # JPA/Hibernate para desarrollo
  jpa:
    hibernate:
      ddl-auto: create-drop  # validate, update, create, create-drop, none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show-sql: true  # true solo en desarrollo
        open-in-view: false  # Mejor práctica para evitar lazy loading issues
        use_sql_comments: tru
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 25
        order_inserts: true
        order_updates: true
        # Cache de segundo nivel (si usas Redis)
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
    validate-on-migrate: true
    clean-disabled: false  # Permitir limpiar BD en desarrollo

  # Configuración de Redis (Cache)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}  # Vacío si no tiene password
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hora en millisegundos
      cache-null-values: false
      use-key-prefix: true
      key-prefix: inventory_dev_

  # DevTools activo
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
    add-properties: false

# Logging detallado para desarrollo
logging:
  level:
    root: INFO
    com.altico.cakeserver: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
    web: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/inventory-service.log

# Actuator - todos los endpoints expuestos
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  endpoint:
#    health:
#      show-details: always
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always

# Mensaje personalizado
app:
  environment: "DEVELOPMENT"
  debug: true