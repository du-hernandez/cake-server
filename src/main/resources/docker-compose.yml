version: '3.8'

services:
  # PostgreSQL Database
#  postgres:
#    image: postgres:15-alpine
#    container_name: inventory_postgres
#    environment:
#      POSTGRES_DB: inventory_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./init-db:/docker-entrypoint-initdb.d  # Scripts de inicializaci√≥n
#    networks:
#      - inventory_network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: inventory_redis
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Commander (GUI para Redis) - Opcional
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: inventory_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    networks:
      - inventory_network
    depends_on:
      - redis

volumes:
  redis_data:
#  postgres_data:

networks:
  inventory_network:
    driver: bridge