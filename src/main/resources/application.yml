# Configuración general de la aplicación
spring:
  application:
    name: inventory-service

  # Configuración de PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/${DB_NAME:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

    # Configuración de HikariCP (Pool de conexiones)
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: InventoryHikariPool

  # Configuración de JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: validate  # validate, update, create, create-drop, none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 25
        order_inserts: true
        order_updates: true
        # Cache de segundo nivel (si usas Redis)
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
    show-sql: false  # true solo en desarrollo
    open-in-view: false  # Mejor práctica para evitar lazy loading issues

  # Configuración de Flyway
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
    validate-on-migrate: true
    clean-disabled: true  # Seguridad: nunca limpiar la BD en producción

  # Configuración de Redis (Cache)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}  # Vacío si no tiene password
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hora en millisegundos
      cache-null-values: false
      use-key-prefix: true
      key-prefix: inventory_

# Configuración del servidor
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: always
    include-binding-errors: always

# Configuración de logging
logging:
  level:
    root: INFO
    com.cesarlead.inventory: DEBUG
    org.hibernate.SQL: DEBUG  # Solo en desarrollo
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # Ver parámetros SQL
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/inventory-service.log

# Configuración de Actuator (Monitoreo)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized

## Perfiles de configuración
#---
## Perfil de desarrollo
#spring:
#  config:
#    activate:
#      on-profile: dev
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: update
#  flyway:
#    clean-disabled: false  # Permitir limpiar BD en desarrollo
#
#---
## Perfil de producción
#spring:
#  config:
#    activate:
#      on-profile: prod
#  jpa:
#    show-sql: false
#    hibernate:
#      ddl-auto: validate
#  datasource:
#    hikari:
#      maximum-pool-size: 20
#
#---
## Perfil de testing
#spring:
#  config:
#    activate:
#      on-profile: test
#  datasource:
#    url: jdbc:tc:postgresql:15:///test_db
#  flyway:
#    enabled: false  # Usar @Sql o datos de prueba específicos